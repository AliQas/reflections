Q: When would you want to use a remote repository rather than keeping all your work local?

A: When you're using multiple computers/devices to access your repo or when there are multiple people contributing to the codebase.

Q: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

A: Auto updates may lead to code that isn't ready for public consumption being pushed to GitHub

Q: Describe the differences between forks, clones, and branches. When would you use one instead of another?

A: Forks are a way of 'cloning' repos on GitHub while giving credit to the original author. Clones refer to copies of a repo. Branches are subsets of the master codebase, usually used for experiments or trying out new features.

Q: What is the benefit of having a copy of the last known state of the remote stored locally?

A: It can serve as a 'backup' for the previous version of the GitHub repo. It can also be a local source with which to compare new changes to the local (master) repo.

Q: How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

A: Using some sort of project management software such as BaseCamp or Trello. Easier: Instant communication. Harder: Sharing and comparing code.

Q: When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

A: You want to use a separate branch when you're experimenting on a new feature or collaborating with others on a project. The benefit of doing so is that your main code is safe from any issues with your new branch. You can check to see if the new code in your branch fits and then merge with master.
